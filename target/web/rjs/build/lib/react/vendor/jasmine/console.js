function makeLogger(e){var o=exports[e]=function(){var r=slice.call(arguments);listeners.forEach(function(g){g(e,r,o)})}}function addListener(e){listeners.push(e)}function clean(e){return"string"==typeof e&&(e=e.replace(/\033\[\d+m/g,"")),e}var global=Function("return this")(),Ap=Array.prototype,slice=Ap.slice,nativeConsole;if("console"in global){var gc=global.console;try{delete global.console}catch(ignored){}nativeConsole=global.console||gc,global.console=gc}global.console=exports,makeLogger("info"),makeLogger("log"),makeLogger("debug"),makeLogger("warn"),makeLogger("error"),makeLogger("dir"),makeLogger("dirxml"),makeLogger("trace"),makeLogger("assert"),makeLogger("count"),makeLogger("markTimeline"),makeLogger("profile"),makeLogger("profileEnd"),makeLogger("time"),makeLogger("timeEnd"),makeLogger("timeStamp"),makeLogger("group"),makeLogger("groupCollapsed"),makeLogger("groupEnd"),makeLogger("clear");var listeners=[];exports.addListener=addListener,nativeConsole&&addListener(function(e,o){var e=nativeConsole[e];e&&e.apply(nativeConsole,o.map(clean))});
//# sourceMappingURL=console.js.map