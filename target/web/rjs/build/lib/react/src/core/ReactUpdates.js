function ensureInjected(){invariant(ReactUpdates.ReactReconcileTransaction&&batchingStrategy,"ReactUpdates: must inject a reconcile transaction class and batching strategy")}function ReactUpdatesFlushTransaction(){this.reinitializeTransaction(),this.dirtyComponentsLength=null,this.callbackQueue=CallbackQueue.getPooled(),this.reconcileTransaction=ReactUpdates.ReactReconcileTransaction.getPooled()}function batchedUpdates(e,t,a){ensureInjected(),batchingStrategy.batchedUpdates(e,t,a)}function mountDepthComparator(e,t){return e._mountDepth-t._mountDepth}function runBatchedUpdates(e){var t=e.dirtyComponentsLength;invariant(t===dirtyComponents.length,"Expected flush transaction's stored dirty-components length (%s) to match dirty-components array length (%s).",t,dirtyComponents.length),dirtyComponents.sort(mountDepthComparator);for(var a=0;t>a;a++){var n=dirtyComponents[a];if(n.isMounted()){var i=n._pendingCallbacks;if(n._pendingCallbacks=null,n.performUpdateIfNecessary(e.reconcileTransaction),i)for(var s=0;s<i.length;s++)e.callbackQueue.enqueue(i[s],n)}}}function enqueueUpdate(e,t){return invariant(!t||"function"==typeof t,"enqueueUpdate(...): You called `setProps`, `replaceProps`, `setState`, `replaceState`, or `forceUpdate` with a callback that isn't callable."),ensureInjected(),warning(null==ReactCurrentOwner.current,"enqueueUpdate(): Render methods should be a pure function of props and state; triggering nested component updates from render is not allowed. If necessary, trigger nested updates in componentDidUpdate."),batchingStrategy.isBatchingUpdates?(dirtyComponents.push(e),void(t&&(e._pendingCallbacks?e._pendingCallbacks.push(t):e._pendingCallbacks=[t]))):void batchingStrategy.batchedUpdates(enqueueUpdate,e,t)}function asap(e,t){invariant(batchingStrategy.isBatchingUpdates,"ReactUpdates.asap: Can't enqueue an asap callback in a context whereupdates are not being batched."),asapCallbackQueue.enqueue(e,t),asapEnqueued=!0}var CallbackQueue=require("CallbackQueue"),PooledClass=require("PooledClass"),ReactCurrentOwner=require("ReactCurrentOwner"),ReactPerf=require("ReactPerf"),Transaction=require("Transaction"),assign=require("Object.assign"),invariant=require("invariant"),warning=require("warning"),dirtyComponents=[],asapCallbackQueue=CallbackQueue.getPooled(),asapEnqueued=!1,batchingStrategy=null,NESTED_UPDATES={initialize:function(){this.dirtyComponentsLength=dirtyComponents.length},close:function(){this.dirtyComponentsLength!==dirtyComponents.length?(dirtyComponents.splice(0,this.dirtyComponentsLength),flushBatchedUpdates()):dirtyComponents.length=0}},UPDATE_QUEUEING={initialize:function(){this.callbackQueue.reset()},close:function(){this.callbackQueue.notifyAll()}},TRANSACTION_WRAPPERS=[NESTED_UPDATES,UPDATE_QUEUEING];assign(ReactUpdatesFlushTransaction.prototype,Transaction.Mixin,{getTransactionWrappers:function(){return TRANSACTION_WRAPPERS},destructor:function(){this.dirtyComponentsLength=null,CallbackQueue.release(this.callbackQueue),this.callbackQueue=null,ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction),this.reconcileTransaction=null},perform:function(e,t,a){return Transaction.Mixin.perform.call(this,this.reconcileTransaction.perform,this.reconcileTransaction,e,t,a)}}),PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);var flushBatchedUpdates=ReactPerf.measure("ReactUpdates","flushBatchedUpdates",function(){for(;dirtyComponents.length||asapEnqueued;){if(dirtyComponents.length){var e=ReactUpdatesFlushTransaction.getPooled();e.perform(runBatchedUpdates,null,e),ReactUpdatesFlushTransaction.release(e)}if(asapEnqueued){asapEnqueued=!1;var t=asapCallbackQueue;asapCallbackQueue=CallbackQueue.getPooled(),t.notifyAll(),CallbackQueue.release(t)}}}),ReactUpdatesInjection={injectReconcileTransaction:function(e){invariant(e,"ReactUpdates: must provide a reconcile transaction class"),ReactUpdates.ReactReconcileTransaction=e},injectBatchingStrategy:function(e){invariant(e,"ReactUpdates: must provide a batching strategy"),invariant("function"==typeof e.batchedUpdates,"ReactUpdates: must provide a batchedUpdates() function"),invariant("boolean"==typeof e.isBatchingUpdates,"ReactUpdates: must provide an isBatchingUpdates boolean attribute"),batchingStrategy=e}},ReactUpdates={ReactReconcileTransaction:null,batchedUpdates:batchedUpdates,enqueueUpdate:enqueueUpdate,flushBatchedUpdates:flushBatchedUpdates,injection:ReactUpdatesInjection,asap:asap};module.exports=ReactUpdates;
//# sourceMappingURL=ReactUpdates.js.map