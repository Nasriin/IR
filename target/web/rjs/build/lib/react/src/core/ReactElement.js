function defineWarningProperty(e,t){Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:function(){return this._store?this._store[t]:null},set:function(e){warning(!1,"Don't set the "+t+" property of the component. Mutate the existing props object instead."),this._store[t]=e}})}function defineMutationMembrane(e){try{var t={props:!0};for(var n in t)defineWarningProperty(e,n);useMutationMembrane=!0}catch(r){}}var ReactContext=require("ReactContext"),ReactCurrentOwner=require("ReactCurrentOwner"),warning=require("warning"),RESERVED_PROPS={key:!0,ref:!0},useMutationMembrane=!1,ReactElement=function(e,t,n,r,a,i){return this.type=e,this.key=t,this.ref=n,this._owner=r,this._context=a,__DEV__&&(this._store={validated:!1,props:i},useMutationMembrane)?void Object.freeze(this):void(this.props=i)};ReactElement.prototype={_isReactElement:!0},__DEV__&&defineMutationMembrane(ReactElement.prototype),ReactElement.createElement=function(e,t,n){var r,a={},i=null,o=null;if(null!=t){o=void 0===t.ref?null:t.ref,__DEV__&&warning(null!==t.key,"createElement(...): Encountered component with a `key` of null. In a future version, this will be treated as equivalent to the string 'null'; instead, provide an explicit key or use undefined."),i=null==t.key?null:""+t.key;for(r in t)t.hasOwnProperty(r)&&!RESERVED_PROPS.hasOwnProperty(r)&&(a[r]=t[r])}var l=arguments.length-2;if(1===l)a.children=n;else if(l>1){for(var u=Array(l),c=0;l>c;c++)u[c]=arguments[c+2];a.children=u}if(e.defaultProps){var s=e.defaultProps;for(r in s)"undefined"==typeof a[r]&&(a[r]=s[r])}return new ReactElement(e,i,o,ReactCurrentOwner.current,ReactContext.current,a)},ReactElement.createFactory=function(e){var t=ReactElement.createElement.bind(null,e);return t.type=e,t},ReactElement.cloneAndReplaceProps=function(e,t){var n=new ReactElement(e.type,e.key,e.ref,e._owner,e._context,t);return __DEV__&&(n._store.validated=e._store.validated),n},ReactElement.isValidElement=function(e){var t=!(!e||!e._isReactElement);return t},module.exports=ReactElement;
//# sourceMappingURL=ReactElement.js.map