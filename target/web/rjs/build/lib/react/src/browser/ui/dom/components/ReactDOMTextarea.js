function forceUpdateIfMounted(){this.isMounted()&&this.forceUpdate()}var AutoFocusMixin=require("AutoFocusMixin"),DOMPropertyOperations=require("DOMPropertyOperations"),LinkedValueUtils=require("LinkedValueUtils"),ReactBrowserComponentMixin=require("ReactBrowserComponentMixin"),ReactCompositeComponent=require("ReactCompositeComponent"),ReactElement=require("ReactElement"),ReactDOM=require("ReactDOM"),ReactUpdates=require("ReactUpdates"),assign=require("Object.assign"),invariant=require("invariant"),warning=require("warning"),textarea=ReactElement.createFactory(ReactDOM.textarea.type),ReactDOMTextarea=ReactCompositeComponent.createClass({displayName:"ReactDOMTextarea",mixins:[AutoFocusMixin,LinkedValueUtils.Mixin,ReactBrowserComponentMixin],getInitialState:function(){var e=this.props.defaultValue,t=this.props.children;null!=t&&(__DEV__&&warning(!1,"Use the `defaultValue` or `value` props instead of setting children on <textarea>."),invariant(null==e,"If you supply `defaultValue` on a <textarea>, do not pass children."),Array.isArray(t)&&(invariant(t.length<=1,"<textarea> can only have at most one child."),t=t[0]),e=""+t),null==e&&(e="");var a=LinkedValueUtils.getValue(this);return{initialValue:""+(null!=a?a:e)}},render:function(){var e=assign({},this.props);return invariant(null==e.dangerouslySetInnerHTML,"`dangerouslySetInnerHTML` does not make sense on <textarea>."),e.defaultValue=null,e.value=null,e.onChange=this._handleChange,textarea(e,this.state.initialValue)},componentDidUpdate:function(){var e=LinkedValueUtils.getValue(this);if(null!=e){var t=this.getDOMNode();DOMPropertyOperations.setValueForProperty(t,"value",""+e)}},_handleChange:function(e){var t,a=LinkedValueUtils.getOnChange(this);return a&&(t=a.call(this,e)),ReactUpdates.asap(forceUpdateIfMounted,this),t}});module.exports=ReactDOMTextarea;
//# sourceMappingURL=ReactDOMTextarea.js.map