function insertChildAt(e,t,n){e.insertBefore(t,e.childNodes[n]||null)}var Danger=require("Danger"),ReactMultiChildUpdateTypes=require("ReactMultiChildUpdateTypes"),getTextContentAccessor=require("getTextContentAccessor"),invariant=require("invariant"),textContentAccessor=getTextContentAccessor(),updateTextContent;updateTextContent="textContent"===textContentAccessor?function(e,t){e.textContent=t}:function(e,t){for(;e.firstChild;)e.removeChild(e.firstChild);if(t){var n=e.ownerDocument||document;e.appendChild(n.createTextNode(t))}};var DOMChildrenOperations={dangerouslyReplaceNodeWithMarkup:Danger.dangerouslyReplaceNodeWithMarkup,updateTextContent:updateTextContent,processUpdates:function(e,t){for(var n,a=null,r=null,i=0;n=e[i];i++)if(n.type===ReactMultiChildUpdateTypes.MOVE_EXISTING||n.type===ReactMultiChildUpdateTypes.REMOVE_NODE){var o=n.fromIndex,d=n.parentNode.childNodes[o],s=n.parentID;invariant(d,"processUpdates(): Unable to find child %s of element. This probably means the DOM was unexpectedly mutated (e.g., by the browser), usually due to forgetting a <tbody> when using tables, nesting tags like <form>, <p>, or <a>, or using non-SVG elements in an <svg> parent. Try inspecting the child nodes of the element with React ID `%s`.",o,s),a=a||{},a[s]=a[s]||[],a[s][o]=d,r=r||[],r.push(d)}var l=Danger.dangerouslyRenderMarkup(t);if(r)for(var p=0;p<r.length;p++)r[p].parentNode.removeChild(r[p]);for(var u=0;n=e[u];u++)switch(n.type){case ReactMultiChildUpdateTypes.INSERT_MARKUP:insertChildAt(n.parentNode,l[n.markupIndex],n.toIndex);break;case ReactMultiChildUpdateTypes.MOVE_EXISTING:insertChildAt(n.parentNode,a[n.parentID][n.fromIndex],n.toIndex);break;case ReactMultiChildUpdateTypes.TEXT_CONTENT:updateTextContent(n.parentNode,n.textContent);break;case ReactMultiChildUpdateTypes.REMOVE_NODE:}}};module.exports=DOMChildrenOperations;
//# sourceMappingURL=DOMChildrenOperations.js.map