function getNodeName(e){return e.substring(1,e.indexOf(" "))}var ExecutionEnvironment=require("ExecutionEnvironment"),createNodesFromMarkup=require("createNodesFromMarkup"),emptyFunction=require("emptyFunction"),getMarkupWrap=require("getMarkupWrap"),invariant=require("invariant"),OPEN_TAG_NAME_EXP=/^(<[^ \/>]+)/,RESULT_INDEX_ATTR="data-danger-index",Danger={dangerouslyRenderMarkup:function(e){invariant(ExecutionEnvironment.canUseDOM,"dangerouslyRenderMarkup(...): Cannot render markup in a worker thread. Make sure `window` and `document` are available globally before requiring React when unit testing or use React.renderToString for server rendering.");for(var r,n={},a=0;a<e.length;a++)invariant(e[a],"dangerouslyRenderMarkup(...): Missing markup."),r=getNodeName(e[a]),r=getMarkupWrap(r)?r:"*",n[r]=n[r]||[],n[r][a]=e[a];var t=[],i=0;for(r in n)if(n.hasOwnProperty(r)){var o=n[r];for(var u in o)if(o.hasOwnProperty(u)){var d=o[u];o[u]=d.replace(OPEN_TAG_NAME_EXP,"$1 "+RESULT_INDEX_ATTR+'="'+u+'" ')}var s=createNodesFromMarkup(o.join(""),emptyFunction);for(a=0;a<s.length;++a){var g=s[a];g.hasAttribute&&g.hasAttribute(RESULT_INDEX_ATTR)?(u=+g.getAttribute(RESULT_INDEX_ATTR),g.removeAttribute(RESULT_INDEX_ATTR),invariant(!t.hasOwnProperty(u),"Danger: Assigning to an already-occupied result index."),t[u]=g,i+=1):__DEV__&&console.error("Danger: Discarding unexpected node:",g)}}return invariant(i===t.length,"Danger: Did not assign to every index of resultList."),invariant(t.length===e.length,"Danger: Expected markup to render %s nodes, but rendered %s.",e.length,t.length),t},dangerouslyReplaceNodeWithMarkup:function(e,r){invariant(ExecutionEnvironment.canUseDOM,"dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a worker thread. Make sure `window` and `document` are available globally before requiring React when unit testing or use React.renderToString for server rendering."),invariant(r,"dangerouslyReplaceNodeWithMarkup(...): Missing markup."),invariant("html"!==e.tagName.toLowerCase(),"dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the <html> node. This is because browser quirks make this unreliable and/or slow. If you want to render to the root you must use server rendering. See renderComponentToString().");var n=createNodesFromMarkup(r,emptyFunction)[0];e.parentNode.replaceChild(n,e)}};module.exports=Danger;
//# sourceMappingURL=Danger.js.map