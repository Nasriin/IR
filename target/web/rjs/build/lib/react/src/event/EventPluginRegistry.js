function recomputePluginOrdering(){if(EventPluginOrder)for(var e in namesToPlugins){var n=namesToPlugins[e],i=EventPluginOrder.indexOf(e);if(invariant(i>-1,"EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.",e),!EventPluginRegistry.plugins[i]){invariant(n.extractEvents,"EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.",e),EventPluginRegistry.plugins[i]=n;var t=n.eventTypes;for(var r in t)invariant(publishEventForPlugin(t[r],n,r),"EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.",r,e)}}}function publishEventForPlugin(e,n,i){invariant(!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(i),"EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.",i),EventPluginRegistry.eventNameDispatchConfigs[i]=e;var t=e.phasedRegistrationNames;if(t){for(var r in t)if(t.hasOwnProperty(r)){var a=t[r];publishRegistrationName(a,n,i)}return!0}return e.registrationName?(publishRegistrationName(e.registrationName,n,i),!0):!1}function publishRegistrationName(e,n,i){invariant(!EventPluginRegistry.registrationNameModules[e],"EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.",e),EventPluginRegistry.registrationNameModules[e]=n,EventPluginRegistry.registrationNameDependencies[e]=n.eventTypes[i].dependencies}var invariant=require("invariant"),EventPluginOrder=null,namesToPlugins={},EventPluginRegistry={plugins:[],eventNameDispatchConfigs:{},registrationNameModules:{},registrationNameDependencies:{},injectEventPluginOrder:function(e){invariant(!EventPluginOrder,"EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React."),EventPluginOrder=Array.prototype.slice.call(e),recomputePluginOrdering()},injectEventPluginsByName:function(e){var n=!1;for(var i in e)if(e.hasOwnProperty(i)){var t=e[i];namesToPlugins.hasOwnProperty(i)&&namesToPlugins[i]===t||(invariant(!namesToPlugins[i],"EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.",i),namesToPlugins[i]=t,n=!0)}n&&recomputePluginOrdering()},getPluginModuleForEvent:function(e){var n=e.dispatchConfig;if(n.registrationName)return EventPluginRegistry.registrationNameModules[n.registrationName]||null;for(var i in n.phasedRegistrationNames)if(n.phasedRegistrationNames.hasOwnProperty(i)){var t=EventPluginRegistry.registrationNameModules[n.phasedRegistrationNames[i]];if(t)return t}return null},_resetEventPlugins:function(){EventPluginOrder=null;for(var e in namesToPlugins)namesToPlugins.hasOwnProperty(e)&&delete namesToPlugins[e];EventPluginRegistry.plugins.length=0;var n=EventPluginRegistry.eventNameDispatchConfigs;for(var i in n)n.hasOwnProperty(i)&&delete n[i];var t=EventPluginRegistry.registrationNameModules;for(var r in t)t.hasOwnProperty(r)&&delete t[r]}};module.exports=EventPluginRegistry;
//# sourceMappingURL=EventPluginRegistry.js.map