var invariant=require("invariant"),Mixin={reinitializeTransaction:function(){this.transactionWrappers=this.getTransactionWrappers(),this.wrapperInitData?this.wrapperInitData.length=0:this.wrapperInitData=[],this._isInTransaction=!1},_isInTransaction:!1,getTransactionWrappers:null,isInTransaction:function(){return!!this._isInTransaction},perform:function(i,a,n,t,r,s,l,e){invariant(!this.isInTransaction(),"Transaction.perform(...): Cannot initialize a transaction when there is already an outstanding transaction.");var o,c;try{this._isInTransaction=!0,o=!0,this.initializeAll(0),c=i.call(a,n,t,r,s,l,e),o=!1}finally{try{if(o)try{this.closeAll(0)}catch(h){}else this.closeAll(0)}finally{this._isInTransaction=!1}}return c},initializeAll:function(i){for(var a=this.transactionWrappers,n=i;n<a.length;n++){var t=a[n];try{this.wrapperInitData[n]=Transaction.OBSERVED_ERROR,this.wrapperInitData[n]=t.initialize?t.initialize.call(this):null}finally{if(this.wrapperInitData[n]===Transaction.OBSERVED_ERROR)try{this.initializeAll(n+1)}catch(r){}}}},closeAll:function(i){invariant(this.isInTransaction(),"Transaction.closeAll(): Cannot close transaction when none are open.");for(var a=this.transactionWrappers,n=i;n<a.length;n++){var t,r=a[n],s=this.wrapperInitData[n];try{t=!0,s!==Transaction.OBSERVED_ERROR&&r.close&&r.close.call(this,s),t=!1}finally{if(t)try{this.closeAll(n+1)}catch(l){}}}this.wrapperInitData.length=0}},Transaction={Mixin:Mixin,OBSERVED_ERROR:{}};module.exports=Transaction;
//# sourceMappingURL=Transaction.js.map