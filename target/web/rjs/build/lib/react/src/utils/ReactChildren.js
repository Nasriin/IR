function ForEachBookKeeping(e,o){this.forEachFunction=e,this.forEachContext=o}function forEachSingleChild(e,o,n,r){var l=e;l.forEachFunction.call(l.forEachContext,o,r)}function forEachChildren(e,o,n){if(null==e)return e;var r=ForEachBookKeeping.getPooled(o,n);traverseAllChildren(e,forEachSingleChild,r),ForEachBookKeeping.release(r)}function MapBookKeeping(e,o,n){this.mapResult=e,this.mapFunction=o,this.mapContext=n}function mapSingleChildIntoContext(e,o,n,r){var l=e,t=l.mapResult,i=!t.hasOwnProperty(n);if(warning(i,"ReactChildren.map(...): Encountered two children with the same key, `%s`. Child keys must be unique; when two children share a key, only the first child will be used.",n),i){var a=l.mapFunction.call(l.mapContext,o,r);t[n]=a}}function mapChildren(e,o,n){if(null==e)return e;var r={},l=MapBookKeeping.getPooled(r,o,n);return traverseAllChildren(e,mapSingleChildIntoContext,l),MapBookKeeping.release(l),r}function forEachSingleChildDummy(){return null}function countChildren(e){return traverseAllChildren(e,forEachSingleChildDummy,null)}var PooledClass=require("PooledClass"),traverseAllChildren=require("traverseAllChildren"),warning=require("warning"),twoArgumentPooler=PooledClass.twoArgumentPooler,threeArgumentPooler=PooledClass.threeArgumentPooler;PooledClass.addPoolingTo(ForEachBookKeeping,twoArgumentPooler),PooledClass.addPoolingTo(MapBookKeeping,threeArgumentPooler);var ReactChildren={forEach:forEachChildren,map:mapChildren,count:countChildren};module.exports=ReactChildren;
//# sourceMappingURL=ReactChildren.js.map